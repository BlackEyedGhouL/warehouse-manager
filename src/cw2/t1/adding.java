/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cw2.t1;

import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class adding extends javax.swing.JInternalFrame {

    /**
     * Creates new form dashboard
     */
    public adding() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblstock = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnclear = new javax.swing.JButton();
        btnview = new javax.swing.JButton();
        lblcrates = new javax.swing.JLabel();
        lbll = new javax.swing.JLabel();
        txtl = new javax.swing.JTextField();
        lblsl = new javax.swing.JLabel();
        txtm = new javax.swing.JTextField();
        lblm = new javax.swing.JLabel();
        lblsm = new javax.swing.JLabel();
        txts = new javax.swing.JTextField();
        lbls = new javax.swing.JLabel();
        lblss = new javax.swing.JLabel();
        btnadd = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(673, 572));

        lblstock.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        lblstock.setForeground(new java.awt.Color(0, 0, 0));
        lblstock.setText("Your current stock : ");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Package", "Crates L", "Crates M", "Crates S", "Duration", "NIC"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnclear.setBackground(new java.awt.Color(0, 95, 79));
        btnclear.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        btnview.setBackground(new java.awt.Color(0, 95, 79));
        btnview.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        btnview.setText("View");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });

        lblcrates.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lblcrates.setForeground(new java.awt.Color(0, 0, 0));
        lblcrates.setText("No of crates :");

        lbll.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lbll.setForeground(new java.awt.Color(0, 0, 0));
        lbll.setText("L");

        txtl.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        txtl.setForeground(new java.awt.Color(0, 0, 0));
        txtl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtlKeyReleased(evt);
            }
        });

        lblsl.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lblsl.setForeground(new java.awt.Color(204, 0, 0));

        txtm.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        txtm.setForeground(new java.awt.Color(0, 0, 0));
        txtm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmKeyReleased(evt);
            }
        });

        lblm.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lblm.setForeground(new java.awt.Color(0, 0, 0));
        lblm.setText("M");

        lblsm.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lblsm.setForeground(new java.awt.Color(204, 0, 0));

        txts.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        txts.setForeground(new java.awt.Color(0, 0, 0));
        txts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsKeyReleased(evt);
            }
        });

        lbls.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lbls.setForeground(new java.awt.Color(0, 0, 0));
        lbls.setText("S");

        lblss.setFont(new java.awt.Font("Consolas", 0, 22)); // NOI18N
        lblss.setForeground(new java.awt.Color(204, 0, 0));

        btnadd.setBackground(new java.awt.Color(0, 95, 79));
        btnadd.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblcrates)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtl, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(lblsl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtm, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(lblsm, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbls)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txts, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(lblss, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblstock)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnclear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnview))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(506, 506, 506)
                                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstock)
                    .addComponent(btnview)
                    .addComponent(btnclear))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblsl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblcrates)
                        .addComponent(txtl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbll)
                        .addComponent(lblm)
                        .addComponent(lbls))
                    .addComponent(lblsm, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblss, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnadd)
                .addContainerGap(237, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbm = (DefaultTableModel)jTable1.getModel();
        for( int r = tbm.getRowCount() - 1; r>= 0; r-- )
        {
            tbm.removeRow(r);
        }
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
        try{
            String url ="jdbc:mysql://localhost:3306/wms";
            String uname ="root";
            String pass ="18765121";
            String query = "SELECT * FROM warehouse_req WHERE nic = '"+Interface1.keynic+"'";

            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, uname, pass);
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(query);

            if(rs.next()){
                String pa = rs.getString("package");
                String  l = String.valueOf(rs.getInt("crates_l"));
                String  m = String.valueOf(rs.getInt("crates_m"));
                String  s = String.valueOf(rs.getInt("crates_s"));
                String duration = rs.getString("duration");
                String nic = rs.getString("nic");

                String tbData[] = {pa,l,m,s,duration,nic};
                DefaultTableModel tbm = (DefaultTableModel)jTable1.getModel();

                for( int t = tbm.getRowCount() - 1; t >= 0; t-- )
                {
                    tbm.removeRow(t);
                }

                tbm.addRow(tbData);
            }
            st.close();
            connection.close();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnviewActionPerformed

    private void txtlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlKeyReleased
        // TODO add your handling code here:
        try {
            String PATTERN = "^[0-9]{0,3}$";
            Pattern pattern = Pattern.compile(PATTERN);
            Matcher match = pattern.matcher(txtl.getText());

            if(!match.matches()){
                lblsl.setText("*");
            }
            else{
                lblsl.setText(null);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtlKeyReleased

    private void txtmKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmKeyReleased
        // TODO add your handling code here:
        try {
            String PATTERN = "^[0-9]{0,3}$";
            Pattern pattern = Pattern.compile(PATTERN);
            Matcher match = pattern.matcher(txtm.getText());

            if(!match.matches()){
                lblsm.setText("*");
            }
            else{
                lblsm.setText(null);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtmKeyReleased

    private void txtsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsKeyReleased
        // TODO add your handling code here:
        try {
            String PATTERN = "^[0-9]{0,3}$";
            Pattern pattern = Pattern.compile(PATTERN);
            Matcher match = pattern.matcher(txts.getText());

            if(!match.matches()){
                lblss.setText("*");
            }
            else{
                lblss.setText(null);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtsKeyReleased
    
    int i=1;
    Double total , btotal ,ftotal;
    static int bl,bm,bs;
    static String package1;
    
    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        
        if(lblsl.getText()=="*" || lblsm.getText()=="*" ||lblss.getText()=="*" || txtl.getText().equals("")|| txtm.getText().equals("") || txts.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please enter requested details");
        }
        else{
            getvaluesdb();
            Double afl = (double)(bl); Double afm = (double)(bm); Double afs = (double)(bs);       
            btotal = afl+(afm/2)+(afs/4);
            total = Double.parseDouble(txtl.getText()) + (Double.parseDouble(txtm.getText())/2) + (Double.parseDouble(txts.getText())/4); 
            ftotal = total + btotal ;
            
            if (package1.equals("Large")) {
                if (ftotal>100) {
                JOptionPane.showMessageDialog(null,"Enter a valid num of crates suitable for your package");
                i=0;
            }}
            else{
                if (ftotal>50) {
                JOptionPane.showMessageDialog(null,"Enter a valid num of crates suitable for your package");
                i=0;
            }
            }        
        
            if (i==1) {
                
                int fl = bl + (Integer.valueOf(txtl.getText()));
                int fm = bm + (Integer.valueOf(txtm.getText()));            //f means 'final' ¯\_( ͡° ͜ʖ ͡°)_/¯
                int fs = bs + (Integer.valueOf(txts.getText())); 
                        
                try{
        String url ="jdbc:mysql://localhost:3306/wms";
        String uname ="root";
        String pass ="18765121";
        String query = "UPDATE warehouse_req SET crates_l = '"+fl+"', crates_m = '"+fm+"', crates_s = '"+fs+"'";

        Class.forName("com.mysql.jdbc.Driver");
        Connection connection = DriverManager.getConnection(url, uname, pass);
        Statement st = connection.createStatement();
        
        st.executeUpdate(query);
        JOptionPane.showMessageDialog(null, "Your crates has been added");
        st.close();
        connection.close();
        }
        catch(Exception e){
         JOptionPane.showMessageDialog(null,e);
        }
            }
    }//GEN-LAST:event_btnaddActionPerformed
    }
    
    public static void getvaluesdb(){
        try {
            String url ="jdbc:mysql://localhost:3306/wms";
            String uname ="root";
            String pass ="18765121";
            String query = "SELECT * FROM warehouse_req WHERE nic = '"+Interface1.keynic+"'";
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, uname, pass);
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(query);

            if(rs.next()){
                bl = rs.getInt("crates_l");
                bm = rs.getInt("crates_m");
                bs = rs.getInt("crates_s");
                package1 = rs.getString("package");
            }
           st.close();
           connection.close();
           
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnview;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblcrates;
    private javax.swing.JLabel lbll;
    private javax.swing.JLabel lblm;
    private javax.swing.JLabel lbls;
    private javax.swing.JLabel lblsl;
    private javax.swing.JLabel lblsm;
    private javax.swing.JLabel lblss;
    private javax.swing.JLabel lblstock;
    private javax.swing.JTextField txtl;
    private javax.swing.JTextField txtm;
    private javax.swing.JTextField txts;
    // End of variables declaration//GEN-END:variables
}
